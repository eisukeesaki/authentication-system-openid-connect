server-side session management
    implementation
        tools
            Redis
                express-session
                redis/node-redis
                connect-redis
    session management mechanisms
        types
            permissive
                allow apps to initially accept any cookie values as valid and create a session for it
            strict
                enforce server to only accept cookie values previously generated by the server
    session ID
        problem
            getting fingerprinted
                solution
                    use custom cookie name
                        example
                            id
            getting brute-force attacked
                solution
                    use long-enough value
                        criterion
                            at least 128 bits
            getting guessing attacked
                solution
                    use random-enough value
                        criterion
                            at least 64 bits of entropy
            SID value collides with existing ID value
                solution
                    ensure unique-ness of value within scope of in subject
            disclosing information
                solution
                    use meaningless value and store logic associated with it on the server side
                        storage
                            session object
                            database
            gettign session fixation attacked
                solution
                    use HTTP cookies
                    don't use
                        URL parameters
                        URL arguments on GET requests
                        body arguments on POST requests
            getting eavesdropped & passively disclosing information
                use HTTPS (TLS) connection for the entire web session
                use Secure Set-Cookie attribute
            SID values can be used by attackers to execute arbitrary code on server
                solution
                    consider SID values to be untrusted
                        validate & verify value before processing
            attackers may execute session fixation attacks
                renew SID values after any priviledge level change
                    examples
                        when priviledge level of user changes from unauthenticated to authenticated
            if a session never expire, attackers have unlimited time to execute attacks
                solution
                    invalidate sessions on server-side
                        automatically
                            set expiration timeouts
                                types of timeouts
                                    ide (inactive)
                                    absolute
                                    renewal
                        manually expire session
                            allow users to execute a function which invalidate their session
                                example instance
                                    logout button rendered on browser viewport
